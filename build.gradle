plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.13.8",
    selenideVersion = "5.20.1",
    junitVersion = "5.7.1",
    ownerVersion = "1.0.12"

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    compile("org.aspectj:aspectjweaver:1.9.6")
    compile("com.codeborne:selenide:$selenideVersion")
    compile("io.qameta.allure:allure-selenide:$allureVersion")
    compile("com.github.javafaker:javafaker:1.0.2")
    compile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    compile("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    compile("org.aeonbits.owner:owner:$ownerVersion")
    compile("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties += System.properties
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=en")

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                               : true,
                'junit.jupiter.execution.parallel.mode.default'                          : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'                  : 'concurrent',
                'junit.jupiter.execution.parallel.ru.pikcomfort.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.ru.pikcomfort.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
            events "started", "failed"
//            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
}